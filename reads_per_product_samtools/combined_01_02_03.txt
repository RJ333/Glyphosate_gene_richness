#!/bin/sh

# the samtools part of the script may take days, so use a tmux-session

## TODO: script that starts this script as TMUX session?
# https://gist.github.com/swaroopch/728896

# tmux 		# session will stay logged in
# tmux a 	# regain tmux session, must be logged in to the login node (sshbio-49)
# ctrl+b, c # new tab in tmux session for jobinfo etc
# ctrl+b, n # next
# ctrl+b, p # previous


PROKKA_DIR=/data/Rene/glyph/prokka
ORIGINAL_BASE_DIR=/data/jwerner/glyphosate/IMP
PROKKA_PATH=output_IMP/Analysis/annotation

# for samtools step
SAMTOOLS_BIN=/data/jwerner/tools/samtools-1.7/samtools
OUTPUT_DIR=/data/Rene/glyph/prokka/samtools
BED_DIR=${OUTPUT_DIR}/bed
RESULTS_DIR=${OUTPUT_DIR}/results
TMP_DIR=${OUTPUT_DIR}/tmp

mkdir -p $PROKKA_DIR
mkdir -p $OUTPUT_DIR
mkdir -p $BED_DIR
mkdir -p $RESULTS_DIR
mkdir -p $TMP_DIR

# this script removes any previous versions of the combined prokka file. then is collects prokka
# files from all samples, extracts the important columns and adds them to prokka_all_modified
# including the sample name as first column
# the output can then be used as input for R with splitstackshape 

rm -f $PROKKA_DIR/prokka_all_modified.tsv 

for sample in A1 A2 A3 A4 A5 A6 A7 B8 B9 B10
do
  echo $sample
  for prokka_annot in ${ORIGINAL_BASE_DIR}/${sample}/${PROKKA_PATH}/annotation.filt.gff
  do
	echo $prokka_annot
	# be careful with linebreks within awk
	awk -v sample=$sample \
    'BEGIN {OFS = FS = "\t"}
    {a=sample;} 
    {print a, $1, $4, $5, $9}' $prokka_annot >> $PROKKA_DIR/prokka_all_modified.tsv
    echo "prokka annotation of sample $sample modified and appended"
  done
done
echo "output written to $PROKKA_DIR/prokka_all_modified.tsv"


# call like this: 
conda activate Renv
Rscript /data/Rene/git/Glyphosate_gene_richness/reads_per_product_samtools/02_modify_prokka_products.r \
  -p="$PROKKA_DIR/prokka_all_modified.tsv" -o="$PROKKA_DIR" 


# how many cores should GNU Parallel use for samtools?
GNU_CORES=43

# results directories


samtools_view_parallel() {
	SAMPLE="$1"
	PRODUCT_NAME="$2"
	BED_FILENAME=${BED_DIR}/intersect_${PRODUCT_NAME}_${SAMPLE}.bed
	grep "$PRODUCT_NAME" ${PROKKA_DIR}/prokka_for_bed_${SAMPLE}.tsv \
	  > ${TMP_DIR}/${PRODUCT_NAME}_${SAMPLE}_tmp.gff
	
	cat ${TMP_DIR}/${PRODUCT_NAME}_${SAMPLE}_tmp.gff |\
	awk 'BEGIN {FS = OFS = "\t"} {print $1,$2,$3,$4,$7}' > ${BED_FILENAME}

	$SAMTOOLS_BIN view -L ${BED_FILENAME} ${ORIGINAL_BASE_DIR}/$SAMPLE/output_IMP/Assembly/mg.reads.sorted.bam |\
      grep -v -P "^\@" | cut -f 1,3 | sort | uniq | cut -f 2  | sort | uniq -c |\
	  perl -ane '$_=~/^\s+(\d+) (.+)$/;chomp($2); print "$2\t$1\n"; '\
	  > ${RESULTS_DIR}/mg.reads.per.gene_${PRODUCT_NAME}_${SAMPLE}.tsv

	rm ${TMP_DIR}/${PRODUCT_NAME}_${SAMPLE}_tmp.gff
}


export -f samtools_view_parallel
# These variables are defined outside the function and must be exported to be visible
export BED_DIR
export TMP_DIR
export OUTPUT_DIR
export RESULTS_DIR
export SAMTOOLS_BIN
export ORIGINAL_BASE_DIR
export PROKKA_DIR

parallel -j $GNU_CORES samtools_view_parallel ::: A1 A2 A3 A4 A5 A6 A7 B8 B9 B10 :::: $PROKKA_DIR/unified_unique_prokka_products_greater_0.tsv
